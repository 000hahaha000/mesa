[require]
GL >= 3.2
GLSL >= 1.50
GL_ARB_shader_ballot
GL_ARB_gpu_shader_int64
GL_ARB_gpu_shader5

[vertex shader passthrough]

[fragment shader]
#version 150
#extension GL_ARB_shader_ballot : require
#extension GL_ARB_gpu_shader_int64 : require
#extension GL_ARB_gpu_shader5 : require

out vec4 outcolor;

void main() {
	uint64_t active_set = ballotARB(true);
	uvec2 t = bitCount(unpackUint2x32(active_set));
	uint num_active = t.x + t.y;
	uint i;

	/* This loop should terminate even without the loop condition. We simply
	 * add the condition here to ensure termination when there are shader
	 * compiler bugs.
	 */
	for (i = 0u; i < num_active; ++i) {
		uint first_invocation = readFirstInvocationARB(gl_SubGroupInvocationARB);

		if (first_invocation == gl_SubGroupInvocationARB)
			break;
	}

	if (i >= num_active) {
		outcolor = vec4(1.0, 0.0, i / 255.0, gl_SubGroupInvocationARB / 255.0);
	} else {
		outcolor = vec4(0.0, 1.0, 0.0, 1.0);
	}
}

[test]
clear color 0.0 0.0 0.0 0.0
clear

draw rect -1 -1 2 2
probe all rgba 0.0 1.0 0.0 1.0
