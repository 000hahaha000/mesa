# Verify simple usage of atomics and shared variables

[require]
GL >= 3.3
GLSL >= 3.30
GL_ARB_compute_shader
GL_ARB_shader_atomic_counters

[compute shader]
#version 330
#extension GL_ARB_compute_shader: enable
#extension GL_ARB_shader_atomic_counters: enable

layout(local_size_x = 2, local_size_y = 3) in;

shared uint value;
layout(binding = 0) uniform atomic_uint pass;
const uint size = gl_WorkGroupSize.x * gl_WorkGroupSize.y * gl_WorkGroupSize.z;

void main()
{
   if (gl_LocalInvocationIndex == 0u)
      value = 0u;
   barrier();
   atomicAdd(value, gl_LocalInvocationIndex);
   barrier();
   if (gl_LocalInvocationIndex == 0u) {
      if (value == size * (size - 1u) / 2u)
         atomicCounterIncrement(pass);
   }
}

[test]
atomic counters 1
compute 2 3 4
probe atomic counter 0 == 24
