# Check that vertex attributes whose type is uvec4 actually have 32
# bits of precision.
#
#
# This test sends the vertex shader various pairs of integral vertex
# attributes that differ by exactly 1, and the vertex shader verifies
# that the difference is exactly 1.  This verifies that the vertex
# attributes haven't gone through a process that loses precision
# (e.g. conversion to vec4 and back to uvec4).

[require]
GLSL >= 1.30

[vertex shader]
#version 130
attribute vec4 vertex;
attribute uvec4 x;
attribute uvec4 y;

void main()
{
	gl_Position = vertex;
	if (y - x == uvec4(1, 1, 1, 1))
		gl_FrontColor = vec4(0.0, 1.0, 0.0, 1.0);
	else
		gl_FrontColor = vec4(1.0, 0.0, 0.0, 1.0);
}

[fragment shader]
#version 130
void main()
{
	gl_FragColor = gl_Color;
}

[vertex data]
vertex/float/2 x/uint/4                                    y/uint/4
-1.0 -1.0      0xa62b25d1 0x224e8e32 0x0c4ee1fc 0xc8f0e8ca 0xa62b25d2 0x224e8e33 0x0c4ee1fd 0xc8f0e8cb
 1.0 -1.0      0x19eb64f2 0x6699cf95 0xba1b25ac 0x7a399139 0x19eb64f3 0x6699cf96 0xba1b25ad 0x7a39913a
 1.0  1.0      0x098b61e0 0x730197b3 0x6aa4e07e 0xf79ca532 0x098b61e1 0x730197b4 0x6aa4e07f 0xf79ca533
-1.0  1.0      0xb0741d16 0x5416e667 0xd25ea78d 0x2a64127f 0xb0741d17 0x5416e668 0xd25ea78e 0x2a641280

[test]
draw arrays GL_QUADS 0 4
probe all rgba 0.0 1.0 0.0 1.0
