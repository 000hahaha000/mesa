# Both arrays will typically not fit into the GPU's
# fastest storage type, requiring at least one to
# be spilled/reloaded from a slower memory.
# Test that this still produces correct values for array
# elements.
[require]
GLSL >= 1.30

[vertex shader passthrough]

[fragment shader]
uniform uint i;
void main()
{
	uint A[60];
	uint B[70];
	A[20] = 0u;
	A[i] = 37u;
	B[20] = 0u;
	B[i] = 39u;
	gl_FragColor.rba = vec3(0.0, 0.0, 1.0);
	gl_FragColor.g = float(A[20] == 37u && B[20] == 39u);
}

[test]
clear color 1.0 0.0 0.0 1.0
clear
uniform uint i 19
draw rect -1 -1 2 2
probe all rgba 0.0 0.0 0.0 1.0

clear
uniform uint i 20
draw rect -1 -1 2 2
probe all rgba 0.0 1.0 0.0 1.0
