[require]
GLSL >= 1.30
GL_MESA_shader_integer_functions

[vertex shader]
#extension GL_MESA_shader_integer_functions : enable

in vec4 piglit_vertex;
out vec4 color;

uniform uvec4 x, y;
uniform uvec4 expected_carry;

void main()
{
	gl_Position = piglit_vertex;

	color = vec4(0.0, 1.0, 0.0, 1.0);

	/* Test that optimization passes like dead code elimination don't
	 * eliminate the addition if the carry result isn't used.
	 */
	uvec4 carry;
	uaddCarry(x, y, carry);

	if (carry != expected_carry)
		color.b = 1.0;
}

[fragment shader]
in vec4 color;
out vec4 frag_color;

void main()
{
	frag_color = color;
}

[test]
uniform uvec4 x 0 1 2 3
uniform uvec4 y 1 2 3 4
uniform uvec4 expected_carry 0 0 0 0
draw rect -1 -1 2 2
probe all rgba 0.0 1.0 0.0 1.0

uniform uvec4 x 0 1 1 2
uniform uvec4 y 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFE 0xFFFFFFFE
uniform uvec4 expected_carry 0 1 0 1
draw rect -1 -1 2 2
probe all rgba 0.0 1.0 0.0 1.0

uniform uvec4 x 2 3 2 3
uniform uvec4 y 0xFFFFFFFF 0xFFFFFFFF 0xFFFFFFFE 0xFFFFFFFE
uniform uvec4 expected_carry 1 1 1 1
draw rect -1 -1 2 2
probe all rgba 0.0 1.0 0.0 1.0

uniform uvec4 x 0x80000000 0x80000000 0x80000000 0x80000001
uniform uvec4 y 0x80000000 0x80000001 0x7FFFFFFF 0x7FFFFFFF
uniform uvec4 expected_carry 1 1 0 1
draw rect -1 -1 2 2
probe all rgba 0.0 1.0 0.0 1.0
