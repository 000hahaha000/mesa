// From the GLSL 1.50 spec, section 4.3.7 (Interface Blocks):
//
//     Furthermore, if a matching block is declared as an array, then
//     the array sizes must also match (or follow array matching rules
//     for the interface between a vertex and a geometry shader).
//
// In this test, we deliberately create a uniform block array in both
// the vertex and fragment shaders, using different array sizes.  The
// geometry shader does not access the uniform block array.  Then we
// check that the implementation correctly reported an error.

[require]
GLSL >= 1.50

[vertex shader]
uniform Foo {
  vec4 x;
} foo[3];

void main()
{
  gl_Position = vec4(foo[0].x);
}

[geometry shader]
layout(triangles) in;
layout(triangle_strip, max_vertices=3) out;

void main()
{
  for (int i = 0; i < 3; i++) {
    gl_Position = gl_in[i].gl_Position;
    EmitVertex();
  }
}

[fragment shader]
uniform Foo {
  vec4 x;
} bar[2];

void main()
{
  gl_FragColor = bar[0].x;
}

[test]
link error
