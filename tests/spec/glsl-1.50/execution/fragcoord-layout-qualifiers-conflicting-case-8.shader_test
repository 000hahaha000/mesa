/* Section 4.3.8.1 (Input Layout Qualifiers) of the GLSL 1.50 spec says:
 *
 *     "Fragment shaders can have an input layout only for redeclaring the
 *     built-in variable gl_FragCoord (see section 7.2 Fragment Shader
 *     Special Variables). The layout qualifier identifiers for
 *     gl_FragCoord are
 *
 *     layout-qualifier-id:
 *         origin_upper_left
 *         pixel_center_integer"
 *
 *
 *     "If gl_FragCoord is redeclared in any fragment shader in a program,
 *      it must be redeclared in all the fragment shaders in that program
 *      that have a static use gl_FragCoord. All redeclarations of
 *      gl_FragCoord in all fragment shaders in a single program must have
 *      the same set of qualifiers."
 *
 * Tests the case when none of the fragment shaders use gl_FragCoord, but
 * redeclare it with conflicting layout qualifiers. GLSL 1.50 expects the
 * redeclarations in all the fragment shaders to match.
 */
[require]
GLSL >= 1.50


[vertex shader passthrough]

[fragment shader]

layout(pixel_center_integer) in vec4 gl_FragCoord;
out vec4 fragcolor;
void alpha();
void blue();
void main()
{
     fragcolor.rg = vec2(0.0 , 1.0);
     blue();
     alpha();
}

[fragment shader]

layout(pixel_center_integer) in vec4 gl_FragCoord;
out vec4 fragcolor;
void alpha()
{
     fragcolor.a = 1.0;
}

[fragment shader]

layout(origin_upper_left) in vec4 gl_FragCoord;
out vec4 fragcolor;
void blue()
{
     fragcolor.b = 0.0;
}

[test]
link error
