[require]
GLSL >= 1.40

[vertex shader]
#version 140

in vec4 vertex;
out vec2 texcoords;

void main()
{
	gl_Position = vertex;
	texcoords = texcoords = (vertex.xy + 1.0) / 2.0;
}

[fragment shader]
#version 140
varying vec2 texcoords;
uniform sampler2DRectShadow tex;

void main()
{
	gl_FragColor = shadow2DRectProj(tex, vec4(texcoords.xyy * vec3(31.0, 31.0, 1.0), 2.0));
}

[vertex data]
vertex/float/2
-1.0 -1.0
 1.0 -1.0
 1.0  1.0
-1.0  1.0

[test]
uniform int tex 0
texture shadowRect 0 (32, 32)
draw arrays GL_TRIANGLE_FAN 0 4
relative probe rgba (0.0, 0.1) (1.0, 1.0, 1.0, 1.0)
relative probe rgba (0.0, 1.0) (1.0, 1.0, 1.0, 1.0)
relative probe rgba (0.9, 1.0) (1.0, 1.0, 1.0, 1.0)

relative probe rgba (0.1, 0.0) (0.0, 0.0, 0.0, 0.0)
relative probe rgba (1.0, 0.0) (0.0, 0.0, 0.0, 0.0)
relative probe rgba (1.0, 0.9) (0.0, 0.0, 0.0, 0.0)
