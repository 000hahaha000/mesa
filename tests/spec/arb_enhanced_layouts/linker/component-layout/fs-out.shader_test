// From Section 4.4.2 (Output Layout Qualifiers) of the GLSL 4.40 spec:
//
//   "Additionally, for fragment shader outputs, if two variables are placed
//   within the same location, they must have the same underlying type
//   (floating-point or integer). No component aliasing of output variables or
//   members is allowed."

[require]
GLSL >= 1.40
GL_ARB_enhanced_layouts
GL_ARB_separate_shader_objects
GL_ARB_explicit_attrib_location

[vertex shader passthrough]

[fragment shader]
#version 140
#extension GL_ARB_enhanced_layouts: require
#extension GL_ARB_separate_shader_objects: require
#extension GL_ARB_explicit_attrib_location: require

// consume X/Y components
layout(location = 0) out vec2 a;

// consumes Z/W components
layout(location = 0, component = 2) out vec2 b;

void main()
{
  a = vec2(0.0);
  b = vec2(1.0);
}

[test]
link success
