# This test verifies that dynamically uniform indexing of UBO arrays
# in the geometry shader behaves correctly, when the block member is a
# nonconst-indexed array.

[require]
GLSL >= 1.50
GL_ARB_gpu_shader5

[vertex shader passthrough]

[geometry shader]
#version 150
#extension GL_ARB_gpu_shader5: require

uniform block {
	vec4 color[2];
} arr[4];

uniform int n;
uniform int m;

layout(triangles) in;
layout(triangle_strip, max_vertices=3) out;
out vec4 color;

void main()
{
	for (int i = 0; i < 3; i++) {
		gl_Position = gl_in[i].gl_Position;
		color = arr[n].color[m];
		EmitVertex();
	}
	EndPrimitive();
}

[fragment shader]
#version 150

in vec4 color;
out vec4 out_color;

void main()
{
	out_color = color;
}

[test]
clear color 0.2 0.2 0.2 0.2
clear

ubo array index 0
uniform vec4 block.color[0] 0.0 1.0 1.0 0.0
uniform vec4 block.color[1] 1.0 0.0 0.0 0.0
ubo array index 1
uniform vec4 block.color[0] 0.0 1.0 0.0 0.0
uniform vec4 block.color[1] 0.0 1.0 1.0 0.0
ubo array index 2
uniform vec4 block.color[0] 0.0 1.0 1.0 0.0
uniform vec4 block.color[1] 0.0 0.0 1.0 0.0
ubo array index 3
uniform vec4 block.color[0] 1.0 1.0 1.0 1.0
uniform vec4 block.color[1] 0.0 1.0 1.0 0.0

uniform int n 0
uniform int m 1
draw rect -1 -1 1 1

relative probe rect rgb (0.0, 0.0, 0.5, 0.5) (1.0, 0.0, 0.0)

uniform int n 1
uniform int m 0
draw rect 0 -1 1 1

relative probe rect rgb (0.5, 0.0, 0.5, 0.5) (0.0, 1.0, 0.0)

uniform int n 2
uniform int m 1
draw rect -1 0 1 1

relative probe rect rgb (0.0, 0.5, 0.5, 0.5) (0.0, 0.0, 1.0)

uniform int n 3
uniform int m 0
draw rect 0 0 1 1

relative probe rect rgb (0.5, 0.5, 0.5, 0.5) (1.0, 1.0, 1.0)
