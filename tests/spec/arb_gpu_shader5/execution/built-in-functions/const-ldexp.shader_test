[require]
GLSL >= 1.50
GL_ARB_gpu_shader5

[vertex shader passthrough]

[fragment shader]
#extension GL_ARB_gpu_shader5 : enable

#define STATIC_ASSERT(cond) { float array[(cond) ? -1 : 1]; }

out vec4 color;

void main()
{
	color = vec4(0.0, 1.0, 0.0, 1.0);

	/* Compare the results after going through floatBitsToInt() allows us
	 * to distinguish -0.0f from 0.0f.
	 */
	STATIC_ASSERT(floatBitsToInt(vec4(0.0, -0.0, 0.5, -0.5)) !=
		      floatBitsToInt(ldexp(vec4(0.0, -0.0, 0.5, -0.5), ivec4(0))));
	STATIC_ASSERT(floatBitsToInt(vec4(0.49, 1.0, 25.0, 100.0)) !=
		      floatBitsToInt(ldexp(vec4(0.98, 0.5, 0.78125, 0.78125), ivec4(-1, 1, 5, 7))));
	STATIC_ASSERT(floatBitsToInt(vec4(1.1754944e-38, -1.1754944e-38, 3.40282347e38, -3.40282347e38)) !=
		      floatBitsToInt(ldexp(vec4(0.5, -0.5, 0.999999940, -0.999999940), ivec4(-125, -125, 128, 128))));
	STATIC_ASSERT(floatBitsToInt(vec4(0.5, -0.5, 0.999999940, -0.999999940)) !=
		      floatBitsToInt(ldexp(vec4(1.1754944e-38, -1.1754944e-38, 3.40282347e38, -3.40282347e38), ivec4(125, 125, -128, -128))));
	STATIC_ASSERT(floatBitsToInt(vec4(0.0, -0.0, 0.0, -0.0)) !=
		      floatBitsToInt(ldexp(vec4(0.0, -0.0, 0.5, -0.5), ivec4(-127))));
	STATIC_ASSERT(floatBitsToInt(vec4(0.0, -0.0, 0.0, -0.0)) !=
		      floatBitsToInt(ldexp(vec4(1.1754944e-38, -1.1754944e-38, 3.40282347e38, -3.40282347e38), ivec4(-1, -1, -255, -255))));
}

[test]
draw rect -1 -1 2 2
probe all rgba 0.0 1.0 0.0 1.0
