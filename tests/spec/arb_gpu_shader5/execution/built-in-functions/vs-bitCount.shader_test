[require]
GLSL >= 1.50
GL_ARB_gpu_shader5

[vertex shader]
#extension GL_ARB_gpu_shader5 : enable

in vec4 piglit_vertex;
out vec4 color;

uniform ivec4 bits;
uniform ivec4 iinput;
uniform uvec4 uinput;

void main() {
	gl_Position = piglit_vertex;

	/* Green if both pass. */
	color = vec4(0.0, 1.0, 0.0, 1.0);

	if (bits != bitCount(iinput))
		/* Red if bitCount(ivec4) fails. */
		color = vec4(1.0, 0.0, 0.0, 1.0);
	else if (bits != bitCount(uinput))
		/* Blue if bitCount(uvec4) fails. */
		color = vec4(0.0, 0.0, 1.0, 1.0);
}

[fragment shader]
in vec4 color;
out vec4 frag_color;

void main()
{
	frag_color = color;
}

[test]
uniform ivec4 bits 0 0 0 0
uniform ivec4 iinput 0 0 0 0
uniform uvec4 uinput 0 0 0 0
draw rect -1 -1 2 2
probe all rgba 0.0 1.0 0.0 1.0

uniform ivec4 bits 1 1 1 1
uniform ivec4 iinput 1 2 4 8
uniform uvec4 uinput 1 2 4 8
draw rect -1 -1 2 2
probe all rgba 0.0 1.0 0.0 1.0

uniform ivec4 bits 1 2 3 4
uniform ivec4 iinput 1 3 7 15
uniform uvec4 uinput 1 3 7 15
draw rect -1 -1 2 2
probe all rgba 0.0 1.0 0.0 1.0

uniform ivec4 bits 6 6 3 5
uniform ivec4 iinput 783 111 385 484
uniform uvec4 uinput 783 111 385 484
draw rect -1 -1 2 2
probe all rgba 0.0 1.0 0.0 1.0

uniform ivec4 bits 32 31 31 30
uniform ivec4 iinput -1 -2 -3 -4
uniform uvec4 uinput 0xFFFFFFFF 0xFFFFFFFE 0xFFFFFFFD 0xFFFFFFFC
draw rect -1 -1 2 2
probe all rgba 0.0 1.0 0.0 1.0
