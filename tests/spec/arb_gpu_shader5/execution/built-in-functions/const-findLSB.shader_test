[require]
GLSL >= 1.50
GL_ARB_gpu_shader5

[vertex shader]
in vec4 vertex;

void main() {
	gl_Position = vertex;
}

[fragment shader]
#extension GL_ARB_gpu_shader5 : enable

void bad_constant_folding();

out vec4 color;

void main()
{
	/* Green if both pass. */
	color = vec4(0.0, 1.0, 0.0, 1.0);

	if (ivec4(-1) != findLSB(ivec4(0)))
		bad_constant_folding();
	else if (ivec4(-1) != findLSB(uvec4(0u)))
		bad_constant_folding();

	if (ivec4(0, 1, 0, 2) != findLSB(ivec4(1, 2, 3, 4)))
		bad_constant_folding();
	else if (ivec4(0, 1, 0, 2) != findLSB(uvec4(1u, 2u, 3u, 4u)))
		bad_constant_folding();

	if (ivec4(10, 9, 8, 7) != findLSB(ivec4(1024, 512, 256, 128)))
		bad_constant_folding();
	else if (ivec4(10, 9, 8, 7) != findLSB(uvec4(1024u, 512u, 256u, 128u)))
		bad_constant_folding();

	if (ivec4(0, 1, 0, 2) != findLSB(ivec4(-1, -2, -3, -4)))
		bad_constant_folding();
	else if (ivec4(0, 1, 0, 2) != findLSB(uvec4(0xFFFFFFFFu, 0xFFFFFFFEu, 0xFFFFFFFDu, 0xFFFFFFFCu)))
		bad_constant_folding();

	if (ivec4(31, 30, 29, 28) != findLSB(ivec4(-2147483648, 1073741824, 536870912, 268435456)))
		bad_constant_folding();
	else if (ivec4(31, 30, 29, 28) != findLSB(uvec4(0x80000000u, 0x40000000u, 0x20000000u, 0x10000000u)))
		bad_constant_folding();
}

[vertex data]
vertex/float/2
-1.0 -1.0
 1.0 -1.0
 1.0  1.0
-1.0  1.0

[test]
draw arrays GL_TRIANGLE_FAN 0 4
probe all rgba 0.0 1.0 0.0 1.0
