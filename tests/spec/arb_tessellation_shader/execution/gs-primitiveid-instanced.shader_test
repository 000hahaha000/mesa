# Test that the gl_PrimitiveID input in the TES is correctly set up and starts
# at 0 for each instance in instanced draws.

[require]
GLSL >= 1.50
GL_ARB_tessellation_shader

[vertex shader]
#version 150

out int vs_tes_id;
out int vs_tes_instance;

void main()
{
	vs_tes_id = gl_VertexID;
	vs_tes_instance = gl_InstanceID;
}

[tessellation evaluation shader]
#version 150
#extension GL_ARB_tessellation_shader : require

layout(quads, equal_spacing) in;

in int vs_tes_id[];
in int vs_tes_instance[];

void main()
{
	gl_Position = vec4(-1.0 + vs_tes_id[0] + gl_TessCoord.x,
			   -1.0 + vs_tes_instance[0] + gl_TessCoord.y,
			   0.0, 1.0);
}

[geometry shader]
#version 150

layout(triangles) in;
layout(triangle_strip, max_vertices = 3) out;

out vec4 color;

void main() {
	vec4 tmp_color = vec4(0.0, 1.0, gl_PrimitiveIDIn * 0.1, 1.0);

	color = tmp_color;
	gl_Position = gl_in[0].gl_Position;
	EmitVertex();

	color = tmp_color;
	gl_Position = gl_in[1].gl_Position;
	EmitVertex();

	color = tmp_color;
	gl_Position = gl_in[2].gl_Position;
	EmitVertex();
}


[fragment shader]
#version 150

in vec4 color;

void main()
{
	gl_FragColor = color;
}

[test]
clear color 0.0 0.0 0.0 0.0
clear

patch parameter default level inner 1 1
patch parameter default level outer 1 1 1 1

patch parameter vertices 1
draw arrays instanced GL_PATCHES 0 2 2

# First instance
relative probe rect rgba (0.0, 0.0, 0.5, 0.5) (0.0, 1.0, 0.0, 1.0)
relative probe rect rgba (0.5, 0.0, 0.5, 0.5) (0.0, 1.0, 0.1, 1.0)

# Second instance
relative probe rect rgba (0.0, 0.5, 0.5, 0.5) (0.0, 1.0, 0.0, 1.0)
relative probe rect rgba (0.5, 0.5, 0.5, 0.5) (0.0, 1.0, 0.1, 1.0)
