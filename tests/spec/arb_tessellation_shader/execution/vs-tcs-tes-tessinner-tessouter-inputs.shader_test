[require]
GLSL >= 1.50
GL_ARB_tessellation_shader


[vertex shader]
in vec4 vertex;

void main()
{
	gl_Position = vertex;
}


[tessellation control shader]
#extension GL_ARB_tessellation_shader: require
layout(vertices = 3) out;

void main() {
	gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;
	gl_TessLevelOuter = float[4](3.0, 2.0, 4.0, 5.0);
	gl_TessLevelInner = float[2](6.0, 7.0);
}


[tessellation evaluation shader]
#extension GL_ARB_tessellation_shader: require
layout(triangles) in;

out vec4 color;

void main() {
	gl_Position = gl_in[0].gl_Position * gl_TessCoord[0]
	            + gl_in[1].gl_Position * gl_TessCoord[1]
	            + gl_in[2].gl_Position * gl_TessCoord[2];
	color = gl_TessLevelOuter == float[4](3.0, 2.0, 4.0, 5.0) &&
		gl_TessLevelInner == float[2](6.0, 7.0) ?
			vec4(0.0, 1.0, 0.0, 1.0) : vec4(1.0, 0.0, 0.0, 1.0);
}


[fragment shader]
in vec4 color;

void main()
{
	gl_FragColor = color;
}

[vertex data]
vertex/float/2
-1.0 -1.0
 1.0 -1.0
-1.0  1.0
-1.0  1.0
 1.0 -1.0
 1.0  1.0

[test]
clear color 0.1 0.1 0.1 0.1
clear
patch parameter vertices 3
draw arrays GL_PATCHES 0 6
probe all rgba 0.0 1.0 0.0 1.0
