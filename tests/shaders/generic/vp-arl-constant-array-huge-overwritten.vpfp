; Tests loading of a constant entry in a large constant array after loading
; its index as an offset from an address register.  Catches a bug in the 965
; driver.

!!ARBvp1.0
OPTION ARB_position_invariant;
PARAM vals[] =	{
			{0.5, 1.0, 2.0, 0.0},
			{1.0, 0.0, 0.8, 0.0},
			{1.0, 0.0, 0.5, 0.0},
			{0.8, 1.0, 0.0, 0.0},
			{0.5, 1.0, 2.0, 0.0},
			{1.0, 0.0, 0.8, 0.0},
			{1.0, 0.0, 0.5, 0.0},
			{0.8, 1.0, 0.0, 0.0},
			{0.5, 1.0, 2.0, 0.0},
			{1.0, 0.0, 0.8, 0.0},
			{1.0, 0.0, 0.5, 0.0},
			{0.8, 1.0, 0.0, 0.0},
			{0.5, 1.0, 2.0, 0.0},
			{1.0, 0.0, 0.8, 0.0},
			{1.0, 0.0, 0.5, 0.0},
			{0.8, 1.0, 0.0, 0.0},

			{0.5, 1.0, 2.0, 0.0},
			{1.0, 0.0, 0.8, 0.0},
			{1.0, 0.0, 0.5, 0.0},
			{0.8, 1.0, 0.0, 0.0},
			{0.5, 1.0, 2.0, 0.0},
			{1.0, 0.0, 0.8, 0.0},
			{1.0, 0.0, 0.5, 0.0},
			{0.8, 1.0, 0.0, 0.0},
			{0.5, 1.0, 2.0, 0.0},
			{1.0, 0.0, 0.8, 0.0},
			{1.0, 0.0, 0.5, 0.0},
			{0.8, 1.0, 0.0, 0.0},
			{0.5, 1.0, 2.0, 0.0},
			{1.0, 0.0, 0.8, 0.0},
			{1.0, 0.0, 0.5, 0.0},
			{0.8, 1.0, 0.0, 0.0},

			{0.5, 1.0, 2.0, 0.0},
			{1.0, 0.0, 0.8, 0.0},
			{1.0, 0.0, 0.5, 0.0},
			{0.8, 1.0, 0.0, 0.0},
			{0.5, 1.0, 2.0, 0.0},
			{1.0, 0.0, 0.8, 0.0},
			{1.0, 0.0, 0.5, 0.0},
			{0.8, 1.0, 0.0, 0.0},
			{0.5, 1.0, 2.0, 0.0},
			{1.0, 0.0, 0.8, 0.0},
			{1.0, 0.0, 0.5, 0.0},
			{0.8, 1.0, 0.0, 0.0},
			{0.5, 1.0, 2.0, 0.0},
			{1.0, 0.0, 0.8, 0.0},
			{1.0, 0.0, 0.5, 0.0},
			{0.8, 1.0, 0.0, 0.0},

			{0.5, 1.0, 2.0, 0.0},
			{1.0, 0.0, 0.8, 0.0},
			{1.0, 0.0, 0.5, 0.0},
			{0.8, 1.0, 0.0, 0.0},
			{0.5, 1.0, 2.0, 0.0},
			{1.0, 0.0, 0.8, 0.0},
			{1.0, 0.0, 0.5, 0.0},
			{0.8, 1.0, 0.0, 0.0},
			{0.5, 1.0, 2.0, 0.0},
			{1.0, 0.0, 0.8, 0.0},
			{1.0, 0.0, 0.5, 0.0},
			{0.8, 1.0, 0.0, 0.0},
			{0.5, 1.0, 2.0, 0.0},
			{1.0, 0.0, 0.8, 0.0},
			{1.0, 0.0, 0.5, 0.0},
			{0.8, 1.0, 0.0, 0.0},

			{0.5, 1.0, 2.0, 0.0},
			{1.0, 0.0, 0.8, 0.0},
			{1.0, 0.0, 0.5, 0.0},
			{0.8, 1.0, 0.0, 0.0},
			{0.5, 1.0, 2.0, 0.0},
			{1.0, 0.0, 0.8, 0.0},
			{1.0, 0.0, 0.5, 0.0},
			{0.8, 1.0, 0.0, 0.0},
			{0.5, 1.0, 2.0, 0.0},
			{1.0, 0.0, 0.8, 0.0},
			{1.0, 0.0, 0.5, 0.0},
			{0.8, 1.0, 0.0, 0.0},
			{0.5, 1.0, 2.0, 0.0},
			{1.0, 0.0, 0.8, 0.0},
			{1.0, 0.0, 0.5, 0.0},
			{0.8, 1.0, 0.0, 0.0},

			{0.5, 1.0, 2.0, 0.0},
			{1.0, 0.0, 0.8, 0.0},
			{1.0, 0.0, 0.5, 0.0},
			{0.8, 1.0, 0.0, 0.0},
			{0.5, 1.0, 2.0, 0.0},
			{1.0, 0.0, 0.8, 0.0},
			{1.0, 0.0, 0.5, 0.0},
			{0.8, 1.0, 0.0, 0.0},
			{0.5, 1.0, 2.0, 0.0},
			{1.0, 0.0, 0.8, 0.0},
			{1.0, 0.0, 0.5, 0.0},
			{0.8, 1.0, 0.0, 0.0},
			{0.5, 1.0, 2.0, 0.0},
			{1.0, 0.0, 0.8, 0.0},
			{1.0, 0.0, 0.5, 0.0},
			{0.8, 1.0, 0.0, 0.0},

			{0.5, 1.0, 2.0, 0.0},
			{1.0, 0.0, 0.8, 0.0},
			{1.0, 0.0, 0.5, 0.0},
			{0.8, 1.0, 0.0, 0.0},
			{0.5, 1.0, 2.0, 0.0},
			{1.0, 0.0, 0.8, 0.0},
			{1.0, 0.0, 0.5, 0.0},
			{0.8, 1.0, 0.0, 0.0},
			{0.5, 1.0, 2.0, 0.0},
			{1.0, 0.0, 0.8, 0.0},
			{1.0, 0.0, 0.5, 0.0},
			{0.8, 1.0, 0.0, 0.0},
			{0.5, 1.0, 2.0, 0.0},
			{1.0, 0.0, 0.8, 0.0},
			{1.0, 0.0, 0.5, 0.0},
			{0.8, 1.0, 0.0, 0.0}
		};
ADDRESS A0;

ARL A0.x, program.local[0].x;
; loading index 1 of the array
MOV result.color, vals[A0.x+0];
MOV result.color, vals[0];
END

!!ARBfp1.0
MOV result.color, fragment.color;
END

!!test
vertex.local[0]   1.0     0.0      0.0      0.0
expected          0.5     1.0      1.0      0.0

