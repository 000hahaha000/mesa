#!/usr/bin/env python

from glob import glob
from os import path
from framework.core import testBinDir
import re

# All tests here are registered into the 'gtf' group.
gtf = Group()
profile.tests['gtf'] = gtf

# Chase the piglit/bin/GTF symlink to find where the tests really live.
gtfroot = path.dirname(path.realpath(path.join(testBinDir, 'GTF')))

class GTFTest(PlainExecTest):
    pass_re = re.compile(r'Regression PASSED all 1 tests')

    def __init__(self, command):
        PlainExecTest.__init__(self, command)
        self.env = dict()

    def run(self):
        fullenv = os.environ.copy()
        for e in self.env:
            fullenv[e] = str(self.env[e])

        if self.command is not None:
            proc = subprocess.Popen(
                self.command,
                stdout=subprocess.PIPE,
                stderr=subprocess.PIPE,
                env=fullenv,
                universal_newlines=True
                )
            out, err = proc.communicate()

            test_pass = GTFTest.pass_re.search(out) is not None

            results = TestResult()
            if test_pass:
                results['result'] = 'pass'
            else:
                results['result'] = 'fail'
            if proc.returncode != 0:
                results['result'] = 'fail'
                results['note'] = 'Returncode was %d' % (proc.returncode)

            self.handleErr(results, err)

            results['info'] = "@@@Returncode: %d\n\nErrors:\n%s\n\nOutput:\n%s" % (proc.returncode, err, out)
            results['returncode'] = proc.returncode

        else:
            results = TestResult()
            if 'result' not in results:
                results['result'] = 'skip'

        return results

def add_gtf(testpath, name):
    if name != 'example':
        gtf[name] = GTFTest(['GTF', '-noimagefileio', '-id=7', '-run=' + testpath])

# Find all the .test files and add them to the list.
for test in glob(gtfroot + '/GL*/**/*.test'):
    add_gtf(test, path.basename(test)[:-5])
