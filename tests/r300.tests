#!/usr/bin/python
#
# Testing the r300 DRI driver
#

import os
import re

execfile(os.path.dirname(__file__) + '/all.tests')

from framework.core import *
from framework.gleantest import *



# Potentially serious problem, but workaround for now
GleanTest.globalParams += [ '--visuals', 'id != 0x4b' ]
Test.ignoreErrors.append(re.compile('3D driver claims to not support'))

# Debug info
Test.ignoreErrors.append(re.compile('Try R300_SPAN_DISABLE_LOCKING env var if this hangs.'))

# Some window managers can be confusing for some of the tests because they
# send resize / move events that invalidate frame buffer contents.
# It would be nice to fix these things in a reliable way, but for now
# this workaround of waiting between tests helps...
Test.sleep = 0.2


# glean/blendFunc
#   R300 blending hardware appears to be bad
env = profile.tests['glean']['blendFunc'].env
env['GLEAN_BLEND_RGB_TOLERANCE'] = 1.9
env['GLEAN_BLEND_ALPHA_TOLERANCE'] = 2.0

# glean/exactRGBA
#   insane OpenGL spec requirements
env = profile.tests['glean']['exactRGBA'].env
env['GLEAN_EXACTRGBA_ROUNDING'] = 1

# Tests specific to r300
r300 = Group()
# Apparently, LOD calculations are off a little for small MIP levels.
# This test is a relaxed variant of the texturing/cubemap test.
# Its only purpose is to catch major regressions in cubemapping as long as we
# fail the real texturing/cubemap test.
r300['cubemap-relax'] = PlainExecTest([testBinDir + 'cubemap', '-auto', '-r300relax'])

profile.tests['r300'] = r300
